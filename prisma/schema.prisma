// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userRole {
  customer
  admin
  super_admin
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  role      userRole   @default(customer)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Admin     Admin[]
  Customer  Customer[]
  Order     Order[]

  @@map("users")
}

model Admin {
  id         String  @id @default(uuid())
  name       String
  email      String  @unique
  contactNo  String
  address    String
  profileImg String?
  userId     String

  // Define foreign keys to relate the model to other tables if needed
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model Customer {
  id         String  @id @default(uuid())
  name       String
  email      String  @unique
  contactNo  String
  address    String
  profileImg String?
  userId     String

  // Define foreign keys to relate the model to other tables if needed
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

model Service {
  id          String         @id @default(uuid())
  title       String
  description String         @unique
  price       String
  status      serviceStatus? @default(available)
  img         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("services")
}

enum serviceStatus {
  available
  un_available
}

model Order {
  id           String       @id @default(uuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  serviceItems Json[]
  status       orderStatus? @default(pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

enum orderStatus {
  pending
  approved
  completed
}
